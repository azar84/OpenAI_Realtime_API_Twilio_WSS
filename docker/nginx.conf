events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;

    # Upstream servers
    upstream webapp {
        server localhost:3000;
        keepalive 32;
    }

    upstream websocket {
        server localhost:8081;
        keepalive 32;
    }

    # Main Server
    server {
        listen 80;
        server_name _;

        # Security Headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # WebSocket Server Routes
        location /call {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 60;
        }

        location /logs {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 60;
        }

        # Twilio Webhook Routes
        location /twiml {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type application/xml;
        }

        location /status {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Server API Routes
        location /tools {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /public-url {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://websocket;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Temporary HTML page while Next.js is being fixed
        location / {
            limit_req zone=api burst=20 nodelay;
            
            # Try Next.js first, fallback to simple HTML
            try_files $uri @webapp;
        }
        
        location @webapp {
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Next.js specific headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Fallback to simple HTML if Next.js fails
            error_page 502 503 504 = @fallback;
        }
        
        location @fallback {
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>OpenAI Realtime + Twilio Demo</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; text-align: center; }
        .status { background: #e8f5e8; padding: 20px; border-radius: 4px; margin: 20px 0; }
        .api-link { display: inline-block; background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 4px; margin: 10px 5px; }
        .api-link:hover { background: #0056b3; }
    </style>
</head>
<body>
    <div class="container">
        <h1>ü§ñ OpenAI Realtime + Twilio Demo</h1>
        <div class="status">
            <h3>‚úÖ System Status: Online</h3>
            <p>Your OpenAI Realtime API with Twilio integration is running successfully!</p>
        </div>
        <h3>üîó Available APIs:</h3>
        <a href="/tools" class="api-link">Available Tools</a>
        <a href="/health" class="api-link">Health Check</a>
        <a href="/public-url" class="api-link">Public URL</a>
        <h3>üì± Voice Features:</h3>
        <p>‚Ä¢ Real-time voice conversations with AI</p>
        <p>‚Ä¢ Twilio phone integration</p>
        <p>‚Ä¢ Multiple AI tools (weather, knowledge base, customer lookup, meeting scheduling)</p>
        <p>‚Ä¢ WebSocket-based real-time communication</p>
        <h3>üõ†Ô∏è Next.js Web Interface:</h3>
        <p>The web interface is currently being initialized. The backend APIs are fully functional.</p>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }

        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
